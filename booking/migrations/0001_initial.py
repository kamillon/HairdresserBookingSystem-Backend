# Generated by Django 4.0.5 on 2022-07-13 14:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('phone', models.CharField(max_length=255, null=True)),
                ('is_staff', models.BooleanField(null=True)),
                ('is_superuser', models.BooleanField(null=True)),
                ('is_employee', models.BooleanField(null=True)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('user', 'klient'), ('employee', 'pracownik'), ('manager', 'właścieciel salonu')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=50, unique=True)),
                ('miejscowosc', models.CharField(max_length=100, unique=True)),
                ('ulica', models.CharField(max_length=100, unique=True)),
                ('nr_budynku', models.CharField(max_length=5, unique=True)),
                ('kod_pocztowy', models.CharField(blank=True, max_length=20, null=True)),
                ('poczta', models.CharField(blank=True, max_length=100, null=True)),
                ('telefon', models.CharField(max_length=9, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('wlasciciel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Salony',
            },
        ),
        migrations.CreateModel(
            name='Usluga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rodzaj_uslugi', models.CharField(choices=[('Fryzjerskie', 'Fryzjerskie'), ('Kosmetyczne', 'Kosmetyczne'), ('Barber', 'Barber')], max_length=20)),
                ('typ_uslugi', models.CharField(choices=[('Damskie', 'Damskie'), ('Meskie', 'Meskie')], max_length=20)),
                ('nazwa_uslugi', models.CharField(max_length=100, unique=True)),
                ('opis', models.TextField()),
                ('czas', models.IntegerField(default=0)),
                ('cena', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.salon')),
            ],
            options={
                'verbose_name_plural': 'Uslugi',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField()),
                ('godzina', models.TimeField()),
                ('is_active', models.BooleanField(default=False)),
                ('do_kogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_reservation', to=settings.AUTH_USER_MODEL)),
                ('klientID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_reservation', to=settings.AUTH_USER_MODEL)),
                ('salonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.salon')),
                ('uslugaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.usluga')),
            ],
            options={
                'verbose_name_plural': 'Rezerwacje',
            },
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('from_hour', models.TimeField()),
                ('to_hour', models.TimeField()),
            ],
            options={
                'ordering': ('weekday', 'from_hour'),
                'unique_together': {('weekday', 'from_hour', 'to_hour')},
            },
        ),
    ]
